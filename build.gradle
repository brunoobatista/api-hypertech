/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "org.springframework.boot" version "2.1.8.RELEASE"
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.0.4.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:2.0.4.RELEASE'
    //compile 'org.flywaydb:flyway-core:5.0.7'
    compile 'org.hibernate:hibernate-java8:5.2.17.Final'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.6'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.springframework.boot:spring-boot-starter-security:2.0.4.RELEASE'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.2.4.RELEASE'
    compile 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-configuration-processor:2.0.4.RELEASE'
    compile 'commons-beanutils:commons-beanutils:1.9.2'
    runtime 'org.springframework.boot:spring-boot-devtools:2.0.4.RELEASE'
    //compile 'org.springframework.boot:spring-boot-devtools:2.0.4.RELEASE'
    runtime 'org.postgresql:postgresql:42.2.8'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.0.4.RELEASE'
}

group = 'com.rancotech'
version = '1.0.0-SNAPSHOT'
description = 'tendtudo-api'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    
}
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

def profiles = 'prod'

bootRun {
  args = ["--spring.profiles.active=" + profiles]
}